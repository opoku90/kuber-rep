# pod-with-volume.yml
#
apiVersion: v1
kind: Pod
metadata:
  name: utrains
  namespace: geolocation
  labels:
   app: utrains
spec:
  volumes:
    - name: "web-data"
      hostPath:
        path: "/tmp/webserver"
  containers:
    - name: utrains-app
      image: 076892551558.dkr.ecr.us-east-1.amazonaws.com/geolocation_ecr_rep:latest
      volumeMounts:
        - mountPath: "/var/www/html"
          name: "web-data"
      resources:
        requests:
          cpu: "400m"
          memory: "128Mi"
        limits:
          cpu: "500m"
          memory: "256Mi"
      ports:
        - containerPort: 80
          name: http
          protocol: TCP
 
#
# Creating a webserver pod that will use host hard disk 
# to store its data. Data will be persistent and independent
# to the lifecycle of the pod. 
#
# The volume will be automaticatally created on the host
# where the pod is assigned by the scheduler.
#
# This pod definition also has memory and cpu limits
#
# create namespace geolocation -
# kubectl create namespace geolocation
#
# run the pod
# kubectl create -f pod-with-volume.yml
#
# check the pod
# kubectl get pods --namespace=geolocation
#
# get details about pod
# kubectl describe pod/utrains --namespace=geolocation
# {observe the mount location and node where its deployed}
#
# ssh onto the node where its deployed and go inside the pod
# kubectl exec -it utrains /bin/bash --namespace=geolocation
#
# { go inside /var/www/html/ directory and create a file }
#
# exit from the pod and delete the pod
#
# delete pod
# kubectl delete pod/utrains --namespace=geolocation
# 
# now again go inside the same node where the pod was running
# you will still find the file created inside /tmp/webserver/
# directory
#
